#TEMPLATE "_SKILL_Base" : Target_EnemyVampiricTouch

INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_Target_EnemyVampiricTouch=-1000000
// [GLOBAL_VARS]
// [~GLOBAL_VARS]

EVENTS

// [EVENTS]
// [~EVENTS]

// Calculate the priority of the skill
EVENT CalculateScore_Target_EnemyVampiricTouch
VARS
	// [CALC_VARS]
	FLOAT:_StatVitality
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_Target_EnemyVampiricTouch")
ACTIONS
	Set(%SkillTargetScore_Target_EnemyVampiricTouch, -1000000)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IF "((c1&c2)|c3)&(!(c4))"
	    CharacterGetStat(_StatVitality, __Me, Vitality) // c1
	    IsLessThen(_StatVitality, 0.6) // c2
	    IsLessThen(_StatVitality, 0.3) // c3
	    IsGreaterThen(_StatVitality, 0.8) // c4
	THEN
	    IterateCharactersInCombat(__Me, "CalculateTarget_Target_EnemyVampiricTouch", Random, Vitality)
	    IF "!c1"
	    	IsEqual(%SkillTargetChar_Target_EnemyVampiricTouch, null)
	    THEN
	    	Add(%ActionScore_Target_EnemyVampiricTouch, %SkillTargetScore_Target_EnemyVampiricTouch)
	    ENDIF
	ENDIF
	// [~CALC_ACTIONS]

	

	
// Calculate the character we should attack
EVENT CalculateTarget_Target_EnemyVampiricTouch
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	FLOAT:_Score
	FLOAT:_WeaponRangeMin
	FLOAT:_WeaponRangeMax
	FLOAT:_DistanceToChar
	FLOAT:_DistanceScore
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_Target_EnemyVampiricTouch")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "(!c1&!c2&!c3)&(c4)&(c5)&(c6)"
	    CharacterIsDead(_Char) // c1
	    CharacterHasStatus(_Char, INVISIBLE) // c2
	    CharacterHasStatus(_Char, SNEAKING) // c3
	    CharacterIsEnemy(__Me, _Char) // c4
	    CharacterGetWeaponRange(_WeaponRangeMin, _WeaponRangeMax, __Me) // c5
	    GetDistance(_DistanceToChar, __Me, _Char) // c6
	THEN
	    // Hostile count score calculation
	    Add(_Score, 10.0) // HostileWeight
	    
	    // Range score calculation
	    Set(_DistanceScore, _DistanceToChar)
	    IF "(c1)"
	        IsGreaterThen(_DistanceScore, _WeaponRangeMax) // c1
	    THEN
	        Subtract(_DistanceScore, _WeaponRangeMax)
	        Multiply(_DistanceScore, -1.0)
	    ELIF "(c1)"
	        IsLessThen(_DistanceScore, _WeaponRangeMin) // c1
	    THEN
	        Subtract(_DistanceScore, _WeaponRangeMin)
	        Multiply(_DistanceScore, 1.0)
	    ELSE 
	        Set(_DistanceScore, 0.0)
	    ENDIF
	    Add(_Score, _DistanceScore)
	    
	    // Can see score calculation
	    IF "!c1"
	    	CharacterCanSee(__Me, _Char)
	    THEN
	    	Add(_Score, -10.0)
	    ENDIF
	    
	    IF "c1"
	    	IsGreaterThen(_Score, %SkillTargetScore_Target_EnemyVampiricTouch)
	    THEN
	    	Set(%SkillTargetChar_Target_EnemyVampiricTouch, _Char)
	    	Set(%SkillTargetScore_Target_EnemyVampiricTouch, _Score)
	    ENDIF	
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	