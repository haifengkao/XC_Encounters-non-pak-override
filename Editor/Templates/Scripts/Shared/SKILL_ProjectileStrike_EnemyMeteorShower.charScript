#TEMPLATE "_SKILL_Base" : ProjectileStrike_EnemyMeteorShower

INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_ProjectileStrike_EnemyMeteorShower=-1000000
// [GLOBAL_VARS]
// [~GLOBAL_VARS]

EVENTS

// [EVENTS]
// [~EVENTS]

// Calculate the priority of the skill
EVENT CalculateScore_ProjectileStrike_EnemyMeteorShower
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_SkillImpactRange
	FLOAT3:_TargetPos
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_ProjectileStrike_EnemyMeteorShower")
ACTIONS
	Set(%SkillTargetScore_ProjectileStrike_EnemyMeteorShower, -1000000)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IF "(c1)&(c2)&(c3)"
	    CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, ProjectileStrike_EnemyMeteorShower) // c1
	    CharacterGetSkillImpactRange(_SkillImpactRange, __Me, ProjectileStrike_EnemyMeteorShower) // c2
	    FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, 0, 2, -1) // c3
	THEN
	    Set(%SkillTargetPos_ProjectileStrike_EnemyMeteorShower, _TargetPos)
	    Add(%ActionScore_ProjectileStrike_EnemyMeteorShower, 20.0)
	ELSE 
	    IterateCharactersInCombat(__Me, "CalculateTarget_ProjectileStrike_EnemyMeteorShower", Random, Vitality)
	    IF "!c1"
	    	IsEqual(%SkillTargetChar_ProjectileStrike_EnemyMeteorShower, null)
	    THEN
	    	Add(%ActionScore_ProjectileStrike_EnemyMeteorShower, %SkillTargetScore_ProjectileStrike_EnemyMeteorShower)
	    ENDIF
	ENDIF
	// [~CALC_ACTIONS]

	

	
// Calculate the character we should attack
EVENT CalculateTarget_ProjectileStrike_EnemyMeteorShower
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	FLOAT:_Score
	INT:_EnemiesInRange
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_ProjectileStrike_EnemyMeteorShower")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "(!c1&!c2&!c3)&(c4)&(c5)"
	    CharacterIsDead(_Char) // c1
	    CharacterHasStatus(_Char, INVISIBLE) // c2
	    CharacterHasStatus(_Char, SNEAKING) // c3
	    CharacterIsEnemy(__Me, _Char) // c4
	    CharacterCount(_EnemiesInRange, _Char, 5, Enemy, null) // c5
	THEN
	    // Hostile count score calculation
	    Add(_Score, 10.0) // HostileWeight
	    
	    // SeveralEnemiesInRange score calculation
	    IF "(!c1)"
	        IsLessThen(_EnemiesInRange, 2) // c1
	    THEN
	        Add(_Score, 5.0)
	    ENDIF
	    
	    // Can see score calculation
	    IF "!c1"
	    	CharacterCanSee(__Me, _Char)
	    THEN
	    	Add(_Score, -10.0)
	    ENDIF
	    
	    IF "c1"
	    	IsGreaterThen(_Score, %SkillTargetScore_ProjectileStrike_EnemyMeteorShower)
	    THEN
	    	Set(%SkillTargetChar_ProjectileStrike_EnemyMeteorShower, _Char)
	    	Set(%SkillTargetScore_ProjectileStrike_EnemyMeteorShower, _Score)
	    ENDIF	
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	