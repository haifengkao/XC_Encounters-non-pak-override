#TEMPLATE "_SKILL_Base" : Projectile_EnemyInfectiousFlame

INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_Projectile_EnemyInfectiousFlame=-1000000
// [GLOBAL_VARS]
INT:%ClassScore_Projectile_EnemyInfectiousFlame
// [~GLOBAL_VARS]

EVENTS

// [EVENTS]
// [~EVENTS]

// Calculate the priority of the skill
EVENT CalculateScore_Projectile_EnemyInfectiousFlame
VARS
	// [CALC_VARS]
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_Projectile_EnemyInfectiousFlame")
ACTIONS
	Set(%SkillTargetScore_Projectile_EnemyInfectiousFlame, -1000000)

	// [CALC_ACTIONS_PRE]
	Set(%ClassScore_Projectile_EnemyInfectiousFlame, 0)
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IterateCharactersInCombat(__Me, "CalculateTarget_Projectile_EnemyInfectiousFlame", Random, Vitality)
	IF "!c1"
		IsEqual(%SkillTargetChar_Projectile_EnemyInfectiousFlame, null)
	THEN
		Add(%ActionScore_Projectile_EnemyInfectiousFlame, %SkillTargetScore_Projectile_EnemyInfectiousFlame)
	ENDIF
	// [~CALC_ACTIONS]

	

	
// Calculate the character we should attack
EVENT CalculateTarget_Projectile_EnemyInfectiousFlame
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	INT:_ClassScore_Projectile_EnemyInfectiousFlame
	FLOAT:_StatFireResistance
	FLOAT:_Score
	INT:_EnemiesInRange
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_Projectile_EnemyInfectiousFlame")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_ClassScore_Projectile_EnemyInfectiousFlame, %ClassScore_Projectile_EnemyInfectiousFlame)
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "(!c1&!c2&!c3)&((c4)|c5)&(!(((c6&c7)|c8)|c9))&(c10)&(c11)"
	    CharacterIsDead(_Char) // c1
	    CharacterHasStatus(_Char, INVISIBLE) // c2
	    CharacterHasStatus(_Char, SNEAKING) // c3
	    CharacterHasStatus(_Char, AGGRO_MARKED) // c4
	    CharacterIsBetterOrEqualClass(_Char, %ClassScore_Projectile_EnemyInfectiousFlame, _ClassScore_Projectile_EnemyInfectiousFlame, 5, 4, 3, 4, 3) // c5
	    CharacterGetStat(_StatFireResistance, _Char, FireResistance) // c6
	    IsGreaterThen(_StatFireResistance, 50) // c7
	    CharacterHasStatus(_Char, BURNING) // c8
	    CharacterHasStatus(_Char, FROZEN) // c9
	    CharacterIsEnemy(__Me, _Char) // c10
	    CharacterCount(_EnemiesInRange, _Char, 5, Enemy, null) // c11
	THEN
	    Set(%ClassScore_Projectile_EnemyInfectiousFlame, _ClassScore_Projectile_EnemyInfectiousFlame)
	    IF "(c1)"
	        CharacterHasStatus(_Char, AGGRO_MARKED) // c1
	    THEN
	        Add(_Score, 5.0)
	    ENDIF
	    // Hostile count score calculation
	    Add(_Score, 10.0) // HostileWeight
	    
	    // SeveralEnemiesInRange score calculation
	    IF "(!c1)"
	        IsLessThen(_EnemiesInRange, 2) // c1
	    THEN
	        Add(_Score, 5.0)
	    ENDIF
	    
	    // Can see score calculation
	    IF "!c1"
	    	CharacterCanSee(__Me, _Char)
	    THEN
	    	Add(_Score, -10.0)
	    ENDIF
	    
	    IF "c1"
	    	IsGreaterThen(_Score, %SkillTargetScore_Projectile_EnemyInfectiousFlame)
	    THEN
	    	Set(%SkillTargetChar_Projectile_EnemyInfectiousFlame, _Char)
	    	Set(%SkillTargetScore_Projectile_EnemyInfectiousFlame, _Score)
	    ENDIF	
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	