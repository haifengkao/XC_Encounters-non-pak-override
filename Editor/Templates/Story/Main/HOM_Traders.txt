Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_PrisonDemonMinStatRequirement(CHARACTER_HOM_Mephisto,2);
DB_MephistoRepBoost(2);

DB_MehpistoAbilityPointsForTalent(1);
DB_MephistoTalentForAbilityCost(1);

DB_MehpistoAbilityPointsCostForStat(3);
DB_MephistoStatForAbilityCost(1);

NeverThreatenedDialog(CHARACTER_HOM_Earth_Skill_Trainer);
NeverThreatenedDialog(CHARACTER_HOM_Wind_Skill_Trainer);
NeverThreatenedDialog(CHARACTER_HOM_Fire_Skill_Trainer);
NeverThreatenedDialog(CHARACTER_HOM_Ice_Skill_Trainer);
NeverThreatenedDialog(CHARACTER_HOM_TellerOfSecrets);
NeverThreatenedDialog(CHARACTER_HOM_Mephisto);
NeverThreatenedDialog(CHARACTER_HOM_HenchmenTrader);
NeverThreatenedDialog(CHARACTER_HOM_Trader);
NeverThreatenedDialog(CHARACTER_HOM_Weaver);

CharacterSetVisible(CHARACTER_HOM_AltarHack,0);
CharacterSetCanFight(CHARACTER_HOM_AltarHack,0);
CharacterSetImmortal(CHARACTER_HOM_AltarHack,1);

DB_Dialogs(CHARACTER_HOM_HenchmenTrader,"HOM_HenchmenTrader");

DB_BigTrader(CHARACTER_HOM_AltarHack);
DB_BigTrader(CHARACTER_HOM_Earth_Skill_Trainer);
DB_BigTrader(CHARACTER_HOM_Wind_Skill_Trainer);
DB_BigTrader(CHARACTER_HOM_Fire_Skill_Trainer);
DB_BigTrader(CHARACTER_HOM_Ice_Skill_Trainer);
DB_BigTrader(CHARACTER_HOM_TellerOfSecrets);
DB_BigTrader(CHARACTER_HOM_Trader);

DB_NoCharacterCompanionReplace(CHARACTER_HOM_Mephisto);

//DB_Dialogs(CHARACTER_HOM_Mephisto,"HOM_Mephisto"); DO NOT GIVE HOM_Mephisto a dialog or defaultdialog through the normal system. THere are some exceptions so I handle dialog starting myself. -G
CharacterSetHasDialog(CHARACTER_HOM_Mephisto,1);

DB_RespeccableCompanion(CHARACTER_Madoc);
DB_RespeccableCompanion(CHARACTER_Wolgraff);
DB_RespeccableCompanion(CHARACTER_Bairdotr);

ItemTemplateAddToCharacter("BOOK_Skill_StatPoints_28b2ff38-74dd-494a-8a34-9020ecca47b1",CHARACTER_HOM_TellerOfSecrets,1);
ItemTemplateAddToCharacter("BOOK_Skill_AbilityPoints_36da8caa-8e38-4b14-b96a-3511eed491b6",CHARACTER_HOM_TellerOfSecrets,1);
KBSECTION
//REGION Mephisto 
IF
DialogStartRequested(CHARACTER_HOM_Mephisto,_)
THEN
NOT HOM_MephistoDialogHandled(1);

IF
DialogStartRequested(CHARACTER_HOM_Mephisto,CHARACTER_Jahan)
THEN
CharacterDisplayText(CHARACTER_Jahan,"HOM_NoDealWithDemons");
HOM_MephistoDialogHandled(1);

IF
DialogStartRequested(CHARACTER_HOM_Mephisto,_Companion)
AND
DB_DefinedCompanions(_Companion)
AND
NOT DB_RespeccableCompanion(_Companion)
THEN
ProcStartCompanionDialog(_Companion,CHARACTER_HOM_Mephisto);
HOM_MephistoDialogHandled(1);

IF
DialogStartRequested(CHARACTER_HOM_Mephisto,_Character)
AND
NOT HOM_MephistoDialogHandled(1)
THEN
DialogStartTwoSpeakerDialog("HOM_Mephisto",CHARACTER_HOM_Mephisto,_Character);

PROC
ProcSetPrisonDemonEvents(CHARACTER_HOM_Mephisto,_Player)
AND
CharacterGetTalentPoints(_Player,_Count)
AND
DB_MephistoTalentForAbilityCost(_cost)
AND
_Count>=_Cost
THEN
DialogSetCharacterEvent("PrisonDemon_PlayerHas_TalentPoints",_Player,0);

PROC
ProcSetPrisonDemonEvents(CHARACTER_HOM_Mephisto,_Player)
AND
CharacterGetTalentPoints(_Player,_Count)
AND
DB_MephistoTalentForAbilityCost(_cost)
AND
_Count<_cost
THEN
DialogClearCharacterEvent("PrisonDemon_PlayerHas_TalentPoints",_Player,0);

PROC
ProcSetPrisonDemonEvents(CHARACTER_HOM_Mephisto,_Player)
AND
CharacterGetAbilityPoints(_Player,_Count)
AND
DB_MehpistoAbilityPointsCostForStat(_cost)
AND
_Count>=_Cost
THEN
DialogSetCharacterEvent("PrisonDemon_PlayerHas_AbilityPoints",_Player,0);

PROC
ProcSetPrisonDemonEvents(CHARACTER_HOM_Mephisto,_Player)
AND
CharacterGetAbilityPoints(_Player,_Count)
AND
DB_MehpistoAbilityPointsCostForStat(_cost)
AND
_Count<_cost
THEN
DialogClearCharacterEvent("PrisonDemon_PlayerHas_AbilityPoints",_Player,0);

IF
DialogStartRequested(CHARACTER_HOM_Mephisto,_Player)
THEN
ProcSetPrisonDemonEvents(CHARACTER_HOM_Mephisto,_Player);

IF
DialogCharacterEventSet("Mehpisto_GetAbilityPoints",_Player,_)
THEN
DialogClearCharacterEvent("Mehpisto_GetAbilityPoints",_Player,0);
DB_TradeTalentForAbilityPoints(_Player);

IF
DialogCharacterEventSet("Mehpisto_GetStatPoints",_Player,_)
THEN
DialogClearCharacterEvent("Mehpisto_GetStatPoints",_Player,0);
DB_TradeAbilityPointsForStat(_Player);

PROC
ProcHOMSetRespectCost(_)
AND
DB_MephistoRespecCost(_Cost)
THEN
NOT DB_MephistoRespecCost(_Cost);

PROC
ProcHOMSetRespectCost((INTEGER)_Cost)
THEN
DB_MephistoRespecCost(_Cost);

IF
DialogCharacterEventSet("Mehpisto_GetRespec",_Player,_Inst)
AND
DialogGetLocalEvent(_Inst,"RespecPrice",_Cost)
THEN
ProcHOMSetRespectCost(_Cost);
DialogClearCharacterEvent("Mehpisto_GetRespec",_Player,0);
DB_RespecPlayer(_Player);

IF
DialogCharacterEventSet("Mehpisto_RejectDeal",_Player,_)
THEN
DialogClearCharacterEvent("Mehpisto_RejectDeal",_Player,0);
NOT DB_TradeTalentForAbilityPoints(_Player);
NOT DB_TradeAbilityPointsForStat(_Player);
DialogClearCharacterEvent("Mehpisto_GetStatPoints",_Player,0);
DialogClearCharacterEvent("Mehpisto_GetAbilityPoints",_Player,0);
DialogClearCharacterEvent("Mehpisto_GetRespec",_Player,0);
NOT DB_RespecPlayer(_Player);

IF
DialogCharacterEventSet("PlayerUsesMephisto",_Player,_)
THEN
DialogClearCharacterEvent("PlayerUsesMephisto",_Player,0);
ProcHOMBoostReputation(_Player);
ProcHOMCheckAbilityPointsForTalent(_Player);
ProcHOMCheckStatForAbilityPoints(_Player);
DB_MephistoBuffs(_Player);

IF
DialogEnded("HOM_Mephisto",_Inst)
AND
DB_MephistoBuffs(_Player)
THEN
CharTimer(_Player,"MephistoBuff",500);
NOT DB_MephistoBuffs(_Player);

IF
CharTimerFinished(_Player,"MephistoBuff")
THEN
CharacterPlayEffect(_Player,"FX_Skills_Air_Storm_Impact_A");


IF
DialogEnded("HOM_Mephisto",_Inst)
AND
DB_DialogPlayers(_Inst,_Player,1)
AND
DB_RespecPlayer(_Player)
THEN
NOT DB_RespecPlayer(_Player);
ProcHOMCheckRespec(_Player);

PROC
ProcHOMCheckRespec((CHARACTER)_Player)
THEN
ProcIncreaseCompMaxIfLonewolf(_Player);

PROC
ProcHOMCheckRespec((CHARACTER)_Player)
AND
CharacterAddToCharacterCreation(_Player,1,1)
AND
DB_MephistoRespecCost(_Count)
AND
IntegerProduct(_Count,-1,_Cost)
THEN
NOT DB_MephistoRespecCost(_Count);
CharacterAddGold(_Player,_Cost);

//if we failed, put it back up
PROC
ProcHOMCheckRespec((CHARACTER)_Player)
AND
DB_MephistoRespecCost(_Count)
THEN
ProcDecreaseCompMaxIfLonewolf(_Player);

PROC
ProcHOMCheckStatForAbilityPoints((CHARACTER)_Player)
AND
DB_TradeAbilityPointsForStat(_Player)
AND
DB_MehpistoAbilityPointsCostForStat(_Cost)
AND
IntegerProduct(_Cost,-1,_Neg)
AND
DB_MephistoStatForAbilityCost(_Stat)
THEN
NOT DB_TradeAbilityPointsForStat(_Player);
CharacterAddAbilityPoint(_Player,_Neg);
CharacterAddAttributePoint(_Player,_Stat);

PROC
ProcHOMCheckAbilityPointsForTalent((CHARACTER)_Player)
AND
DB_TradeTalentForAbilityPoints(_Player)
AND
DB_MehpistoAbilityPointsForTalent(_Nr)
AND
DB_MephistoTalentForAbilityCost(_Cost)
AND
IntegerProduct(_Cost,-1,_Neg)
THEN
CharacterAddTalentPoint(_Player,_Neg);
CharacterAddAbilityPoint(_Player,_Nr);
NOT DB_TradeTalentForAbilityPoints(_Player);

PROC
ProcHOMBoostReputation((CHARACTER)_Player)
AND
DB_SelectedStatPoint(_Player,_)
THEN
ProcPrisonDemonTakeStatPoint(CHARACTER_HOM_Mephisto,_Player);
ProcHOMModifyReputationBoostForPlayer((CHARACTER)_Player);

PROC
ProcHOMModifyReputationBoostForPlayer((CHARACTER)_Player)
AND
DB_MephistoRepBoost(_RepBoost)
THEN
CharacterAddReputation(_Player,_RepBoost);

//END_REGION

//REGION Altar 

IF
CharacterUsedItem(_Player,ITEM_HOM_ChapelCraftingAltar)
THEN
ProcDoTwoSpeakerDialog("HOM_CraftingAltar",CHARACTER_HOM_AltarHack,_Player);

//END_REGION

IF
CharacterUsedItemTemplate(_Player,"TOOL_Sextant_A_88d57fc3-56b9-4645-8343-0fbe227d3e93",_)
THEN
CharacterShowCoords(_Player);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "DOSStart"
