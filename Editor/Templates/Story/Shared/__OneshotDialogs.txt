Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION One Shot Normal Dialogs
IF
DB_OneShot_PlayerOnlyDialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC)
THEN
DB_OneShotPlayerOnlyTrigger(_Trigger);
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,1);
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1);

IF
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC)
THEN
DB_OneShotPlayerTrigger(_Trigger);
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,1);
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1);

IF
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2)
THEN
DB_OneShotPlayerTrigger(_Trigger);
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,2);
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1);
DB_OneShot_DialogSpeakers(_Trigger,_Npc2,2);

IF
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2,(CHARACTER)_NPC3)
THEN
DB_OneShotPlayerTrigger(_Trigger);
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,3);
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1);
DB_OneShot_DialogSpeakers(_Trigger,_Npc2,2);
DB_OneShot_DialogSpeakers(_Trigger,_Npc3,3);

IF
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2,(CHARACTER)_NPC3,(CHARACTER)_NPC4)
THEN
DB_OneShotPlayerTrigger(_Trigger);
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,4);
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1);
DB_OneShot_DialogSpeakers(_Trigger,_Npc2,2);
DB_OneShot_DialogSpeakers(_Trigger,_Npc3,3);
DB_OneShot_DialogSpeakers(_Trigger,_Npc4,4);

PROC
ProcCheckIfNPCsBusy((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc,_)
AND
_Npc.DB_IsInDialog()
THEN
DB_OneShot_BusyNPC(_Trigger);

PROC
ProcCheckIfNPCsBusy((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc,_)
AND
DB_Dead(_Npc)
THEN
DB_OneShot_BusyNPC(_Trigger);

PROC
ProcDoStartOneShotDialog((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,1)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1)
THEN
ProcDoTwoSpeakerDialog(_Dialog,_Npc,_Player);

PROC
ProcDoStartOneShotDialog((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,2)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc2,2)
THEN
ProcDoThreeSpeakerDialog(_Dialog,_Npc,_Npc2,_Player);

PROC
ProcDoStartOneShotDialog((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,3)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc,1)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc2,2)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc3,3)
THEN
ProcDoFourSpeakerDialog(_Dialog,_Npc,_Npc2,_Npc3,_Player);

PROC
ProcStartOneShotDialog((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
NOT DB_OneShot_BusyNPC(_Trigger)
THEN
ProcDoStartOneShotDialog(_Player,_Trigger);

PROC
ProcClearOneShotCount((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,1)
AND
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC)
THEN
NOT DB_OneShot_DialogTrigger(_Trigger,_Dialog,_NPC);

PROC
ProcClearOneShotCount((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,2)
AND
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2)
THEN
NOT DB_OneShot_DialogTrigger(_Trigger,_Dialog,_NPC,_NPC2);

PROC
ProcClearOneShotCount((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,3)
AND
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2,(CHARACTER)_NPC3)
THEN
NOT DB_OneShot_DialogTrigger(_Trigger,_Dialog,_NPC,_NPC2,_NPC3);


PROC
ProcClearOneShotCount((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,4)
AND
DB_OneShot_DialogTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2,(CHARACTER)_NPC3,(CHARACTER)_NPC4)
THEN
NOT DB_OneShot_DialogTrigger(_Trigger,_Dialog,_NPC,_NPC2,_NPC3,_NPC4);

PROC
ProcClearOneShotCount((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,_Count)
THEN
NOT DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,_Count);

PROC
ProcClearOneShotSpeakers((TRIGGER)_Trigger)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc,_Count)
THEN
NOT DB_OneShot_DialogSpeakers(_Trigger,_Npc,_Count);

PROC
ProcOneShotDialogCleanup((TRIGGER)_Trigger)
THEN
ProcClearOneShotCount(_Trigger);
ProcClearOneShotSpeakers(_Trigger);

PROC
RemoveOneShotDialog((TRIGGER)_Trigger)
THEN
ProcOneShotDialogCleanup(_Trigger);
ProcTriggerUnregisterForPlayers(_Trigger);
NOT DB_OneShotPlayerTrigger(_Trigger);

IF
DB_Dead(_Npc)
AND
DB_OneShot_DialogSpeakers(_Trigger,_Npc,_)
THEN
RemoveOneShotDialog(_Trigger);

PROC
ProcOneShotTriggerEntered((CHARACTER)_,(TRIGGER)_Trigger)
AND
DB_BlockedOneshotDialog((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
QryGetValidDialogSpeaker(_Player)
AND
DB_DialogSpeaker(_ActualSpeaker)
THEN
DB_ClearBlockedDialog(1);
ProcHandleOneShotDialogTrigger(_ActualSpeaker,_Trigger);

PROC
ProcOneShotTriggerEntered((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
NOT DB_BlockedOneshotDialog(_,_Trigger)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_,_)
AND
DB_OneShot_DialogSpeakers(_Trigger,_,1)
AND
NOT _Player.DB_IsInDialog()
AND
QryGetValidDialogSpeaker(_Player)
AND
DB_DialogSpeaker(_ActualSpeaker)
THEN
ProcHandleOneShotDialogTrigger(_ActualSpeaker,_Trigger);

PROC
ProcOneShotTriggerEntered((CHARACTER)_,(TRIGGER)_Trigger)
AND
DB_ClearBlockedDialog(1)
AND
DB_BlockedOneshotDialog((CHARACTER)_Player,(TRIGGER)_Trigger)
THEN
NOT DB_ClearBlockedDialog(1);
NOT DB_BlockedOneshotDialog(_Player,_Trigger);

PROC
ProcHandleOneShotDialogTrigger((CHARACTER)_Player,(TRIGGER)_Trigger)
THEN
ProcDoDualDialogPlayerCheck(_Player);
ProcCheckIfNPCsBusy(_Trigger); //TODO: do this busy check? Dialogs won't ever start if one of these NPCs is busy
ProcCheckIfPlayerIsBusy(_Player,_Trigger);
ProcStartOneShotDialog(_Player,_Trigger);

PROC
ProcCheckIfPlayerIsBusy((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
_Player.DB_IsInDialog()
THEN
DB_OneShot_BusyNPC(_Trigger);

PROC
ProcStartOneShotDialog((CHARACTER)_Speaker,(TRIGGER)_Trigger)
AND
DB_ReplacedCompanionSpeaker(_Companion)
AND
DB_OneShot_BusyNPC(_Trigger)
THEN
DB_BlockedOneshotDialog(_Speaker,_Trigger);
ProcHandleBlockedCompanionDialog(_Speaker);
DB_SkipOneShotClean(1);

PROC
ProcStartOneShotDialog(_,(TRIGGER)_Trigger)
THEN
NOT DB_OneShot_BusyNPC(_Trigger);

PROC
ProcStartOneShotDialog(_,(TRIGGER)_Trigger)
AND
NOT DB_SkipOneShotClean(1)
THEN
ProcOneShotDialogCleanup(_Trigger);

PROC
ProcStartOneShotDialog(_,(TRIGGER)_Trigger)
THEN
NOT DB_SkipOneShotClean(1);

//if the dialog is started (manually), cleanup so this doesn't get started again
IF
DialogStarted(_Dialog,_)
AND
DB_OneShot_DialogSpeakerCount(_Trigger,_Dialog,_Count)
THEN
ProcOneShotDialogCleanup(_Trigger);
ProcTriggerUnregisterForPlayers(_Trigger);
NOT DB_OneShotPlayerTrigger(_Trigger); //because this might not have triggerd yet and we don't want to leave these around

//END_REGION

//REGION One Shot Item Dialogs

//this is basically the same as above
//but because items and  triggers are different Osiris types 
//we have different databases.....

IF
DB_OneShot_DialogItem((ITEM)_Item,(STRING)_Dialog)
THEN
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,0);

IF
DB_OneShot_DialogItem((ITEM)_Item,(STRING)_Dialog,(CHARACTER)_NPC)
THEN
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,1);
DB_OneShot_DialogItemSpeakers(_Item,_Npc,1);

IF
DB_OneShot_DialogItem((ITEM)_Item,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2)
THEN
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,2);
DB_OneShot_DialogItemSpeakers(_Item,_Npc,1);
DB_OneShot_DialogItemSpeakers(_Item,_Npc2,2);

IF
DB_OneShot_DialogItem((ITEM)_Item,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2,(CHARACTER)_NPC3)
THEN
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,3);
DB_OneShot_DialogItemSpeakers(_Item,_Npc,1);
DB_OneShot_DialogItemSpeakers(_Item,_Npc2,2);
DB_OneShot_DialogItemSpeakers(_Item,_Npc3,3);

IF
DB_OneShot_DialogItem((ITEM)_Item,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2,(CHARACTER)_NPC3,(CHARACTER)_NPC4)
THEN
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,4);
DB_OneShot_DialogItemSpeakers(_Item,_Npc,1);
DB_OneShot_DialogItemSpeakers(_Item,_Npc2,2);
DB_OneShot_DialogItemSpeakers(_Item,_Npc3,3);
DB_OneShot_DialogItemSpeakers(_Item,_Npc4,4);

PROC
ProcCheckIfItemNPCsBusy((ITEM)_Item)
AND
DB_OneShot_DialogItemSpeakers(_Item,_Npc,_)
AND
_Npc.DB_IsInDialog()
THEN
DB_OneShot_ItemBusyNPC(_Item);

PROC
ProcDoStartOneShotItemDialog((CHARACTER)_Player,(ITEM)_Item)
AND
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,0)
THEN
ProcDoTwoSpeakerItemDialog(_Dialog,_Player,_Item);

PROC
ProcDoStartOneShotItemDialog((CHARACTER)_Player,(ITEM)_Item)
AND
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,1)
AND
DB_OneShot_DialogItemSpeakers(_Item,_Npc,1)
THEN
ProcDoThreeSpeakerItemDialog(_Dialog,_Npc,_Player,_Item);

PROC
ProcStartOneShotItemDialog((CHARACTER)_Player,(ITEM)_Item)
AND
NOT DB_OneShot_ItemBusyNPC(_Item)
THEN
ProcDoStartOneShotItemDialog(_Player,_Item);

PROC
ProcStartOneShotItemDialog(_,(ITEM)_Item)
THEN
NOT DB_OneShot_ItemBusyNPC(_Item);

PROC
ProcClearOneShotItemCount((ITEM)_Item)
AND
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,_Count)
THEN
NOT DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,_Count);

PROC
ProcClearOneShotItemSpeakers((ITEM)_Item)
AND
DB_OneShot_DialogItemSpeakers(_Item,_Npc,_Count)
THEN
NOT DB_OneShot_DialogItemSpeakers(_Item,_Npc,_Count);

PROC
ProcOneShotDialogItemCleanup((ITEM)_Item)
THEN
ProcClearOneShotItemCount(_Item);
ProcClearOneShotItemSpeakers(_Item);

PROC
RemoveOneShotItemDialog((ITEM)_Item)
THEN
ProcOneShotDialogItemCleanup(_Item);

IF
CharacterUsedItem(_Player,_Item)
AND
NOT DB_DefinedCompanions(_Player)
AND
_Player.DB_IsPlayer()
AND
NOT _Player.DB_IsInDialog()
AND
DB_OneShot_DialogItemSpeakerCount(_Item,_,_)
THEN
ProcCheckIfItemNPCsBusy(_Item); //TODO: do this busy check? Dialogs won't ever start if one of these NPCs is busy
ProcStartOneShotItemDialog(_Player,_Item);
ProcOneShotDialogItemCleanup(_Item);

//if the dialog is started (manually), cleanup so this doesn't get started again
IF
DialogStarted(_Dialog,_)
AND
DB_OneShot_DialogItemSpeakerCount(_Item,_Dialog,_)
THEN
ProcOneShotDialogItemCleanup(_Item);

//END_REGION

//REGION One Shot Automated Dialogs

IF
DB_OneShot_ADTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC)
THEN
DB_OneShotPlayerTrigger(_Trigger);
DB_OneShot_ADSpeakerCount(_Trigger,_Dialog,1);
DB_OneShot_ADSpeakers(_Trigger,_Npc,1);

IF
DB_OneShot_ADTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2)
THEN
DB_OneShotPlayerTrigger(_Trigger);
DB_OneShot_ADSpeakerCount(_Trigger,_Dialog,2);
DB_OneShot_ADSpeakers(_Trigger,_Npc,1);
DB_OneShot_ADSpeakers(_Trigger,_Npc2,2);

PROC
ProcDoStartOneShotAD((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
DB_OneShot_ADSpeakerCount(_Trigger,_Dialog,1)
AND
DB_OneShot_ADSpeakers(_Trigger,_Npc,1)
AND
NOT _Npc.DB_IsInDialog()
THEN
DialogRequestStopForCharacter(_Npc);
DialogStartOneSpeakerDialog(_Dialog,_Npc);

PROC
ProcDoStartOneShotAD((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
DB_OneShot_ADSpeakerCount(_Trigger,_Dialog,2)
AND
DB_OneShot_ADSpeakers(_Trigger,_Npc,1)
AND
DB_OneShot_ADSpeakers(_Trigger,_Npc2,2)
AND
NOT _Npc.DB_IsInDialog()
AND
NOT _Npc2.DB_IsInDialog()
THEN
DialogRequestStopForCharacter(_Npc);
DialogRequestStopForCharacter(_Npc2);
DialogStartTwoSpeakerDialog(_Dialog,_Npc,_Npc2);

PROC
ProcClearOneShotADCount((TRIGGER)_Trigger)
AND
DB_OneShot_ADSpeakerCount(_Trigger,_Dialog,1)
AND
DB_OneShot_ADTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC)
THEN
NOT DB_OneShot_ADTrigger(_Trigger,_Dialog,_NPC);

PROC
ProcClearOneShotADCount((TRIGGER)_Trigger)
AND
DB_OneShot_ADSpeakerCount(_Trigger,_Dialog,2)
AND
DB_OneShot_ADTrigger((TRIGGER)_Trigger,(STRING)_Dialog,(CHARACTER)_NPC,(CHARACTER)_NPC2)
THEN
NOT DB_OneShot_ADTrigger(_Trigger,_Dialog,_NPC,_NPC2);

PROC
ProcClearOneShotADSpeakers((TRIGGER)_Trigger)
AND
DB_OneShot_ADSpeakers(_Trigger,_Npc,_Count)
THEN
NOT DB_OneShot_ADSpeakers(_Trigger,_Npc,_Count);

PROC
ProcOneShotADCleanup((TRIGGER)_Trigger)
THEN
ProcClearOneShotADCount(_Trigger);
ProcClearOneShotADSpeakers(_Trigger);

PROC
RemoveOneShotAD((TRIGGER)_Trigger)
THEN
ProcOneShotADCleanup(_Trigger);
ProcTriggerUnregisterForPlayers(_Trigger);
NOT DB_OneShotPlayerTrigger(_Trigger);

IF
DB_Dead(_Npc)
AND
DB_OneShot_ADSpeakers(_Trigger,_Npc,_)
THEN
RemoveOneShotAD(_Trigger);

PROC
ProcOneShotTriggerEntered((CHARACTER)_Player,(TRIGGER)_Trigger)
AND
DB_OneShot_ADSpeakerCount(_Trigger,_,_)
AND
DB_OneShot_ADSpeakers(_Trigger,_Npc,1)
AND
NOT _Player.DB_IsInDialog()
AND
NOT _Npc.DB_IsInDialog()
THEN
ProcDoStartOneShotAD(_Player,_Trigger);
ProcOneShotADCleanup(_Trigger);

//if the dialog is started (manually), cleanup so this doesn't get started again
IF
AutomatedDialogStarted(_Dialog,_)
AND
DB_OneShot_ADSpeakerCount(_Trigger,_Dialog,_Count)
THEN
ProcOneShotADCleanup(_Trigger);
ProcTriggerUnregisterForPlayers(_Trigger);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
